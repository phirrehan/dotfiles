#!/bin/bash

manual() {
  echo -e "\nUsage: $0 [OPTIONS]\n"
  echo "[OPTIONS]                   [FUNCTIONS]"
  echo "--store-password            enable feature for storing password (default directory is ~/passwords)"
  echo "--dir <path_of_file>        specify a path for storing passwords"
  echo "-n <number_of_passwords>    generate given number of passwords"
  echo "--help ,-h                  show this help"
}

# Check for dependencies
[ ! -f "$HOME/.local/bin/clipboard" ] && 
  echo "Dependency $HOME/.local/bin/clipboard not found." &&
  exit 1

total_passwords="5"            # Setting 5 as default value
output_path="$HOME/.passwords" # Setting default path to store passwords
flag_store_pass="OFF"          # Setting default Store-Password flag to OFF
declare -a password

# Arguments
for ((i = 1; i <= $#; i++)); do

  j=$(expr $i + 1)
  [ "${!i}" = "--store-password" ] && flag_store_pass="ON"
  if [ "${!i}" = "-h" ] || [ "${!i}" = "--help" ]; then
    manual
    exit 0
  fi
  [ "${!i}" = "--dir" ] && output_path=${!j}
  [ "${!i}" = "-n" ] && total_passwords=${!j}
done

# Check for errors
[ -z "$total_passwords" ] &&
  echo "Missing number of passwords to print. Usage: $0 -n <number>" &&
  exit 2
[[ ! $total_passwords =~ ^[0-9]+$ ]] &&
  echo "Argument should be an integral number. Usage: $0 -n <integer>" &&
  exit 3
[ "$total_passwords" -le 0 ] && echo "Invalid number of passwords." &&
  exit 4
[ ! -d $output_dir ] &&
  echo "The directory to file does not exist. Use mkdir to create it first." &&
  exit 5

# Print the line in Yellow color
echo -e "\n\e[0;32mThis is a simple password generator for linux.\e[0m"

if [ "$flag_store_pass" = "ON" ]; then
  echo "Enter the name of the service for the password: "
  read service_name
fi

echo "Please enter the length of the password: "
read pass_length
[[ ! $pass_length =~ ^[0-9]+$ ]] &&
  echo "Error: Enter an integral number for password length." && exit 6
[ $pass_length -lt 1 ] && echo "Invalid length of password" && exit 7
[ $pass_length -gt 65 ] && echo "Warning: Maximum Length is 65 characters."

# Output passwords in Cyan color
echo -e "\e[0;36m"
for ((i = 1; i <= $total_passwords; i++)); do
  echo -n "$i) "
  password[i]=$(openssl rand -base64 48 | cut -c1-$pass_length)
  echo ${password[i]}
done

echo -e "\e[0m\n"
echo "Choose one of the Passwords: "
read ans
if [ "$flag_store_pass" = "ON" ]; then
  echo -n "$service_name: " >>$output_path
  echo "${password[$ans]}" >>$output_path
else
  $HOME/.local/bin/clipboard "${password[$ans]}"
fi
